'use strict';

/**
 * Copyright (c) Xinhuanet Inc. All rights reserved.
 *
 * @License: MIT
 * @Author: SuperWoods
 * @Email:  st_sister@iCloud.com
 * @Date:   2016-08-09-06:45:42
 *
 * @(demo)Last modified by:   SuperWoods
 * @(demo)Last modified time: 2016-08-17-05:01:27
 */

$(function () {
    // 克隆input 到 tempDOM
    var cloneDOM = function cloneDOM($tempDOM, DOM) {
        $tempDOM.html(DOM);
    };

    // 开发模块：展示处理后的DOM
    var showDOM = function showDOM(DOM) {
        var $tempShow = $('#tempShow');
        $tempShow.text(DOM);
    };

    var attr = '';

    // killHandler
    var killHandler = function killHandler($tempDOM) {
        var $output = $('#output');
        var nodeid = $('#nodeid').val();
        var repeat = $('#repeat').val();
        var dayspan = repeat < 200 ? 0 : repeat;

        var nOn = 1; // 0: false, 1: tre\ue;
        var n = nOn ? '\n' : '';

        // let n = '';
        var cms = {
            begin: '<!--webbot bot="AdvTitleList" nodeid="' + (nodeid === '' ? '888888' : nodeid) + '" type="0" spanmode="0" dayspan="' + dayspan + '" attr="' + attr + '" comstring="' + n,
            lt: '&lt;',
            gt: '&gt;',
            enpquot: '#enpquot#',
            Picture: {
                needcode: ['<img data-src="<Picture needcode=0>PictureUrlPh</Picture>">', '<img data-original="<Picture needcode=0>PictureUrlPh</Picture>">',
                // '<img data-src="<Picture needcode=0>PictureUrlPh</Picture>" width="' + imgWidth + '" height="' + imgHeight + '" alt="<Title length="0">TitlePh</Title>">',
                '<Picture needcode=1 width=100 height=100>PictureUrlPh</Picture>']
            },
            Title: '<Title length="0">TitlePh</Title>',
            ArticleUrlPh: 'ArticleUrlPh',
            Abstract: '<Abstract>AbstractPh</Abstract>',
            Subtitle: n + '<Subtitle>SubtitlePh</Subtitle>',
            end: '" TAG="BODY" PREVIEW="[高级标题列表]" artattr="0" isshowcode="0" titlekeyword="" keyword="" tagstring="00" starttime="" endtime="" id="" startspan --><!--webbot bot="AdvTitleList" endspan i-checksum="0" -->'
        };

        // console.log('orgHtml0:', $tempDOM.html());
        var $a = $tempDOM.find('a');
        var $abs = $tempDOM.find('.abs');
        var $subTitle = $tempDOM.find('.subTitle');
        var $ul = $tempDOM.find('ul');

        var $img = $tempDOM.find('img');
        var imgWidth = $img.attr('width');
        var imgHeight = $img.attr('height');

        // 处理 a 内部内容
        $a.each(function (i, e) {
            var _this = $(e);
            if (_this.find('img').length === 0) {
                _this.text(cms.Title);
            }
        });

        // 处理 $abs
        $abs.each(function (i, e) {
            var _this = $(e);
            if (_this.find('a')) {
                var aText = _this.find('a').text();
                _this.text(cms.Abstract + 'URL_BEGIN<a href="' + cms.ArticleUrlPh + '">URL_END' + aText + '</a>');
            } else {
                _this.text(cms.Abstract);
            }
        });

        // 处理 $subTitle
        $subTitle.each(function (i, e) {
            var _this = $(e);
            if (_this.find('a')) {
                _this.text('URL_BEGIN<a href="' + cms.ArticleUrlPh + '">URL_END' + cms.Subtitle + '</a>');
            } else {
                _this.text(cms.Subtitle);
            }
        });

        // 处理 a href自身
        $a.attr('href', cms.ArticleUrlPh).before('URL_BEGIN').prepend('URL_END');

        // 处理 img
        $img.each(function (i, e) {
            var _this = $(e);
            _this.replaceWith(function () {
                var temp = cms.Picture.needcode[2];
                if (_this.attr('data-src')) {
                    temp = cms.Picture.needcode[0];
                } else if (_this.attr('data-original')) {
                    temp = cms.Picture.needcode[1];
                }
                return temp;
            });
        });

        //
        var orgHtml = $tempDOM.html();

        // 开发用模块：查看处理完的 DOM
        showDOM(orgHtml);

        // 获取处理后的 DOM
        var $li = $ul.find('li');
        var size = $li.size();
        console.log(size);
        if ($ul && size > 1) {
            orgHtml = '<ul' + ($ul.hasClass('list') ? ' class="list"' : '') + '>' + n + '<Repeat Begin=0 End=' + size + '>' + n + '<Article>' + n + '<li>' + $li.eq(0).html() + '</li>' + n + '</Article>' + n + '</Repeat>' + n + '</ul>' + n;
        } else {
            // 添加 Article
            orgHtml = '<Article>' + n + orgHtml + n + '</Article>' + n;
            // 添加 Repeat
            if (repeat !== '' && repeat > 0) {
                orgHtml = '<Repeat Begin=0 End=' + repeat + '>' + n + orgHtml + n + '</Repeat>' + n;
            }
        }

        // console.log('orgHtml1:', orgHtml);

        // 转码
        orgHtml = orgHtml.replace(/picture/g, 'Picture').replace(/URL_BEGIN/g, '<Url>').replace(/URL_END/g, '</Url>').replace(/</g, cms.lt).replace(/>/g, cms.gt).replace(/"/g, cms.enpquot);

        console.log('newHtml:', orgHtml);

        var outputTemp = '';
        outputTemp = cms.begin + n + orgHtml + n + cms.end;

        $output.text(outputTemp);
    };

    // attrHandler
    var $attr = $('#attr');
    var $attrText = $attr.find('.attr');
    var $nameAttrArray = $attr.find('[name="attr"]');

    var attrHandler = function attrHandler(e) {
        var $this = $(e.currentTarget);
        var v = '+' + $this.val();
        console.log(v);

        console.log($this[0].checked && v !== '+');

        if ($this[0].checked && v !== '+') {
            attr += v;
            console.log('attr:', attr);
        } else {
            // let reg = new RegExp(eval('/' + v + '/g'));
            // console.log(reg);
            attr = attr.replace(eval(v) + '/g', '');
        }

        if (attr !== '' || v !== '+') {
            $attrText.text(attr);
        } else {
            $attrText.text('默认');
        }
    };

    $nameAttrArray.on('change', function (e) {
        attrHandler(e);
    });

    var $submit = $('#submit');
    $submit.on('click', function () {

        var $input = $('#input');
        var inputVal = $input.val();
        var $tempDOM = $('#tempDOM');

        // 克隆 input 内容
        cloneDOM($tempDOM, $.trim(inputVal));

        // 转译 tempDOM 并输出
        killHandler($tempDOM);
    });
});
